{
    "collab_server" : "",
    "contents" : "require(neuralnet)\nrequire(ROCR)\nrequire(rpart)\nrequire(rpart1a)\nrequire(e1071)\nrequire(caret)\nrequire(pROC)\nrequire(partykit)\nrequire(rattle)\nmydata <-read.csv(\"data/kr-vs-kp.data\",header = FALSE)\nnames(mydata)<-c(\"Bkblk\",\"Bknwy\",\"Bkon8\",\"Bkona\",\"Bkspr\",\"Bkxbq\",\"Bkxcr\",\"Bkxwp\",\"Blxwp\",\"Bxqsq\",\"Cntxt\",\"Dsopp\",\"Dwipd\",\"Hdchk\",\"Katri5\",\"Mulch\",\"Qxmsq\",\"R2ar8\",\"Reskd\",\"Reskr\",\"Rimmx\",\"Rkxwp\",\"Rxmsq\",\"Simpl\",\"Skach\",\"Skewr\",\"Skrxp\",\"Spcop\",\"Stlmt\",\"Thrsk\",\"Wkcti\",\"Wkna8\",\"Wknck\",\"Wkovl\",\"Wkpos\",\"Wtoeg\",\"Class\")\nmydata <- transform(mydata,Bkblk=as.numeric(Bkblk),Bknwy=as.numeric(Bknwy),Bkon8=as.numeric(Bkon8),Bkona=as.numeric(Bkona),Bkspr=as.numeric(Bkspr),Bkxbq=as.numeric(Bkxbq),Bkxcr=as.numeric(Bkxcr),Bkxwp=as.numeric(Bkxwp),Blxwp=as.numeric(Blxwp),Bxqsq=as.numeric(Bxqsq),Cntxt=as.numeric(Cntxt),Dsopp=as.numeric(Dsopp),Dwipd=as.numeric(Dwipd),Hdchk=as.numeric(Hdchk),Katri5=as.numeric(Katri5),Mulch=as.numeric(Mulch),Qxmsq=as.numeric(Qxmsq),R2ar8=as.numeric(R2ar8),Reskd=as.numeric(Reskd),Reskr=as.numeric(Reskr),Rimmx=as.numeric(Rimmx),Rkxwp=as.numeric(Rkxwp),Rxmsq=as.numeric(Rxmsq),Simpl=as.numeric(Simpl),Skach=as.numeric(Skach),Skewr=as.numeric(Skewr),Skrxp=as.numeric(Skrxp),Spcop=as.numeric(Spcop),Stlmt=as.numeric(Stlmt),Thrsk=as.numeric(Thrsk),Wkcti=as.numeric(Wkcti),Wkna8=as.numeric(Wkna8),Wknck=as.numeric(Wknck),Wkovl=as.numeric(Wkovl),Wkpos=as.numeric(Wkpos),Wtoeg=as.numeric(Wtoeg),Class=as.numeric(Class))\nmydataPreProcessed <- preProcess(mydata[,-1],method = c(\"center\"))\nmydata <- predict(mydataPreProcessed,mydata[,-1])\n#mydata<-mydata[sample(nrow(mydata)),]\nfolds <- cut(seq(1,nrow(mydata)),breaks=20,labels=FALSE)\nvectornn1 = c()\nfor(i in 1:20){\n  #Folds\n  index <- which(folds==i,arr.ind=TRUE)\n  testData <- mydata[index, ]\n  trainData <- mydata[-index, ]\n  n <- names(trainData)\n  f <- as.formula(paste(\"Class ~\", paste(n[!n %in% \"Class\"], collapse = \" + \")))\n  net.sqrt <- neuralnet(f,data = trainData, hidden=5, threshold=.01)\n  nnPred <- compute(net.sqrt,testData[,-36])\n  print(sqrt(mean(nnPred$net.result-testData$Class)^2))\n  vectornn1 <- c(vectornn1, sqrt(mean(nnPred$net.result-testData$Class)^2))\n  #rpartPred <- prediction(net.sqrt,testData)\n  #print(confusionMatrix(rpartPred,testData$Class))\n  #fit.pr = predict(svp,testData,type=\"prob\")[,2]\n  #fit.pred = prediction(fit.pr,testData$Class)\n  #fit.perf = performance(fit.pred,\"tpr\",\"fpr\")\n  #plot(fit.perf,lwd=2,col=\"blue\",\n  #     main=\"ROC:  Classification Trees on Adult Dataset\")\n  #abline(a=0,b=1)\n}",
    "created" : 1478430579223.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2022553047",
    "id" : "BF59E43A",
    "lastKnownWriteTime" : 1478475051,
    "last_content_update" : 1478475051545,
    "path" : "/mnt/excess/RWorkSpace/Assignment4/Assignment4/NeuralNet.R",
    "project_path" : "NeuralNet.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}