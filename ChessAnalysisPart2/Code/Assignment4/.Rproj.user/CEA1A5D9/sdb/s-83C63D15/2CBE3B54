{
    "collab_server" : "",
    "contents" : "require(adabag)\nrequire(pROC)\nrequire(randomForest)\n#train_com <- subset(train_values, select = -c(funder,gps_height,installer,wpt_name,subvillage,lga,ward,population,scheme_name,construction_year,waterpoint_type_group,waterpoint_type,source_type,source,payment_type,payment,management,extraction_type_class,extraction_type_group,extraction_type,scheme_management,scheme_management,district_code,region_code,region,basin,amount_tsh) )\nmydata <-read.csv(\"data/kr-vs-kp.data\",header = FALSE)\nnames(mydata)<-c(\"Bkblk\",\"Bknwy\",\"Bkon8\",\"Bkona\",\"Bkspr\",\"Bkxbq\",\"Bkxcr\",\"Bkxwp\",\"Blxwp\",\"Bxqsq\",\"Cntxt\",\"Dsopp\",\"Dwipd\",\"Hdchk\",\"Katri5\",\"Mulch\",\"Qxmsq\",\"R2ar8\",\"Reskd\",\"Reskr\",\"Rimmx\",\"Rkxwp\",\"Rxmsq\",\"Simpl\",\"Skach\",\"Skewr\",\"Skrxp\",\"Spcop\",\"Stlmt\",\"Thrsk\",\"Wkcti\",\"Wkna8\",\"Wknck\",\"Wkovl\",\"Wkpos\",\"Wtoeg\",\"Class\")\ntrain_values_mod <- mydata\naccuracyArray <- {}\nareaArray <- {}\n#train_values_mod <- sapply(train_values_mod,as.numeric)\n#train_values_mod <- as.data.frame(train_values_mod)\n#train_values_mod <- train_values_mod[sample(1:nrow(train_values_mod), 50,replace=FALSE),] \n#train_values_mod <- sapply(train_com,as.numeric)\nfolds <- cut(seq(1,nrow(train_values_mod)),breaks=20,labels=FALSE)\nfor(i in 1:20){\n  #Folds\n  index <- which(folds==i,arr.ind=TRUE)\n  testData <- train_values_mod[index, ]\n  trainData <- train_values_mod[-index, ]\n  rf<-randomForest(Class ~ ., data = trainData,ntree=30,mtry=100,maxnodes=50)\n  rf.pred <- predict(rf, newdata = testData)\n  randTable <- table(rf.pred, testData$Class)\n  print(randTable)\n  #pred<-boosting(status_group~funder,data=trainData,boos=TRUE,mfinal=5)\n  #Vehicle.bagging.pred <- predict.bagging(Vehicle.bagging,newdata=Vehicle[-sub, ], newmfinal=10)\n  #Vehicle.bagging.pred$confusion\n  #Vehicle.bagging.pred$error\n  print(sum(diag(randTable))/nrow(testData))\n  accuracyArray <- append(accuracyArray,sum(diag(randTable))/nrow(testData))\n  a1 <- rep(0, nrow(testData))\n  a2 <- rep(0, nrow(testData))\n  a1[which(rf.pred == \"won\")] <- 1\n  a1[which(rf.pred == \"nowin\")] <- 0\n  a1 <- append(a1,0.5)\n  a2[which(testData$Class == \"won\")] <- 1\n  a2[which(testData$Class == \"nowin\")] <- 0\n  a2 <- append(a2,0)\n  rf.prediction <- roc(a1,a2)\n  plot(rf.prediction)\n  areaArray <- append(areaArray,rf.prediction$auc)\n}",
    "created" : 1478437214637.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2057634888",
    "id" : "2CBE3B54",
    "lastKnownWriteTime" : 1478475049,
    "last_content_update" : 1478475049969,
    "path" : "/mnt/excess/RWorkSpace/RandomForest.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}